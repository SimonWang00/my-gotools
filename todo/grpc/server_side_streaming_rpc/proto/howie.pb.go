// Code generated by protoc-gen-go. DO NOT EDIT.
// source: howie.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_howie_7d97344392e8ad50, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

type Response struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_howie_7d97344392e8ad50, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "proto.Request")
	proto.RegisterType((*Response)(nil), "proto.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HowieServerClient is the client API for HowieServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HowieServerClient interface {
	Howie(ctx context.Context, in *Request, opts ...grpc.CallOption) (HowieServer_HowieClient, error)
}

type howieServerClient struct {
	cc *grpc.ClientConn
}

func NewHowieServerClient(cc *grpc.ClientConn) HowieServerClient {
	return &howieServerClient{cc}
}

func (c *howieServerClient) Howie(ctx context.Context, in *Request, opts ...grpc.CallOption) (HowieServer_HowieClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HowieServer_serviceDesc.Streams[0], "/proto.HowieServer/Howie", opts...)
	if err != nil {
		return nil, err
	}
	x := &howieServerHowieClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HowieServer_HowieClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type howieServerHowieClient struct {
	grpc.ClientStream
}

func (x *howieServerHowieClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HowieServerServer is the server API for HowieServer service.
type HowieServerServer interface {
	Howie(*Request, HowieServer_HowieServer) error
}

func RegisterHowieServerServer(s *grpc.Server, srv HowieServerServer) {
	s.RegisterService(&_HowieServer_serviceDesc, srv)
}

func _HowieServer_Howie_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HowieServerServer).Howie(m, &howieServerHowieServer{stream})
}

type HowieServer_HowieServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type howieServerHowieServer struct {
	grpc.ServerStream
}

func (x *howieServerHowieServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

var _HowieServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.HowieServer",
	HandlerType: (*HowieServerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Howie",
			Handler:       _HowieServer_Howie_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "howie.proto",
}

func init() { proto.RegisterFile("howie.proto", fileDescriptor_howie_7d97344392e8ad50) }

var fileDescriptor_howie_7d97344392e8ad50 = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc8, 0x2f, 0xcf,
	0x4c, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xf2, 0x5c, 0xec, 0x41,
	0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x22, 0x5c, 0xac, 0x99, 0x79, 0x05, 0xa5, 0x25, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x92, 0x12, 0x17, 0x47, 0x50, 0x6a, 0x71, 0x41,
	0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x18, 0x17, 0x5b, 0x7e, 0x69, 0x09, 0x42, 0x09, 0x94, 0x67, 0x64,
	0xcd, 0xc5, 0xed, 0x01, 0x32, 0x3a, 0x38, 0xb5, 0xa8, 0x2c, 0xb5, 0x48, 0x48, 0x87, 0x8b, 0x15,
	0xcc, 0x15, 0xe2, 0x83, 0xd8, 0xa5, 0x07, 0xb5, 0x41, 0x8a, 0x1f, 0xce, 0x87, 0x18, 0xa8, 0xc4,
	0x60, 0xc0, 0x98, 0xc4, 0x06, 0x16, 0x33, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x7d, 0x80,
	0x2e, 0x9e, 0x00, 0x00, 0x00,
}
