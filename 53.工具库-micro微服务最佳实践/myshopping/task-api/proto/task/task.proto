syntax = "proto3";

package go.micro.service.task;

//定义task服务的接口，主要是增删改查
//结构非常类似于go语言的interface定义，只是返回值必须用括号包裹，且不能使用基本类型作为参数或返回值
service TaskService {
	rpc Create(Task)returns (EditResponse){}
	rpc Delete(Task)returns (EditResponse){}
	rpc Modify(Task)returns (EditResponse){}
	rpc Finished(Task)returns (EditResponse){}
	rpc Search(SearchRequest)returns (SearchResponse){}
}

//下面是消息体message的定义，可以暂时理解为go中的struct，其中的1，2，3...是每个变量唯一的编码
message Task {
	//每条任务的ID，本项目中对应mongodb记录的"_id"字段
	//@inject_tag: bson:"_id" form:"id"
	string id = 1;
	//任务主体文字
	//@inject_tag: bson:"body" form:"body"
	string body = 2;
	//用户设定的任务开始时间戳
	//@inject_tag: bson:"startTime" form:"startTime"
	int64 startTime = 3;
	//用户设定的任务截止时间戳
	//@inject_tag: bson:"endTime" form:"endTime"
	int64 endTime = 4;
	//任务是否已完成
	//@inject_tag: bson:"isFinished" form:"isFinished"
	int32 isFinished = 5;
	//用户实际完成时间戳
	//@inject_tag: bson:"finishTime" form:"finishTime"
	int64 finishTime = 6;
	//任务创建时间
	//@inject_tag: bson:"createTime" form:"createTime"
	int64 createTime = 7;
	//任务修改时间
	//@inject_tag: bson:"updateTime" form:"updateTime"
	int64 updateTime = 8;
	//用户ID
	//@inject_tag: bson:"userId" form:"userId"
	string userId=9;
}

//增删改接口返回参数
message EditResponse {
	//操作返回的消息
	string msg = 1;
}
//查询接口的参数
message SearchRequest{
	//分页查询页码，从第一页开始
	//@inject_tag: form:"pageSize"
	int64 pageSize = 1;
	//分页查询每页数量，默认20
	//@inject_tag: form:"pageCode"
	int64 pageCode = 2;
	// 排序字段
	//@inject_tag: form:"sortBy"
	string sortBy = 3;
	// 顺序 -1降序 1升序
	//@inject_tag: form:"order"
	int32 order=4;
	//关键字模糊查询任务body字段
	//@inject_tag: form:"keyword"
	string keyword = 5;
}

message SearchResponse{
	//分页查询页码，从第一页开始
	//@inject_tag: form:"pageSize"
	int64 pageSize = 1;
	//分页查询每页数量，默认20
	//@inject_tag: form:"pageCode"
	int64 pageCode = 2;
	// 排序字段
	//@inject_tag: form:"sortBy"
	string sortBy = 3;
	// 顺序 -1降序 1升序
	//@inject_tag: form:"order"
	int32 order=4;
	//数据总数
	//@inject_tag: form:"total"
	int64 total = 5;
	//具体数据，这里repeated表示可以出现多条，类似于go中的slice
	//@inject_tag: form:"rows"
	repeated Task rows = 6;
}
