// Code generated by protoc-gen-go. DO NOT EDIT.
// source: howie.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HowieUp struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HowieUp) Reset()         { *m = HowieUp{} }
func (m *HowieUp) String() string { return proto.CompactTextString(m) }
func (*HowieUp) ProtoMessage()    {}
func (*HowieUp) Descriptor() ([]byte, []int) {
	return fileDescriptor_howie_d5a836b4e8fc0c77, []int{0}
}
func (m *HowieUp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HowieUp.Unmarshal(m, b)
}
func (m *HowieUp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HowieUp.Marshal(b, m, deterministic)
}
func (dst *HowieUp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HowieUp.Merge(dst, src)
}
func (m *HowieUp) XXX_Size() int {
	return xxx_messageInfo_HowieUp.Size(m)
}
func (m *HowieUp) XXX_DiscardUnknown() {
	xxx_messageInfo_HowieUp.DiscardUnknown(m)
}

var xxx_messageInfo_HowieUp proto.InternalMessageInfo

func (m *HowieUp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HowieDown struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HowieDown) Reset()         { *m = HowieDown{} }
func (m *HowieDown) String() string { return proto.CompactTextString(m) }
func (*HowieDown) ProtoMessage()    {}
func (*HowieDown) Descriptor() ([]byte, []int) {
	return fileDescriptor_howie_d5a836b4e8fc0c77, []int{1}
}
func (m *HowieDown) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HowieDown.Unmarshal(m, b)
}
func (m *HowieDown) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HowieDown.Marshal(b, m, deterministic)
}
func (dst *HowieDown) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HowieDown.Merge(dst, src)
}
func (m *HowieDown) XXX_Size() int {
	return xxx_messageInfo_HowieDown.Size(m)
}
func (m *HowieDown) XXX_DiscardUnknown() {
	xxx_messageInfo_HowieDown.DiscardUnknown(m)
}

var xxx_messageInfo_HowieDown proto.InternalMessageInfo

func (m *HowieDown) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*HowieUp)(nil), "proto.HowieUp")
	proto.RegisterType((*HowieDown)(nil), "proto.HowieDown")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HowieClient is the client API for Howie service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HowieClient interface {
	LoL(ctx context.Context, in *HowieUp, opts ...grpc.CallOption) (*HowieDown, error)
}

type howieClient struct {
	cc *grpc.ClientConn
}

func NewHowieClient(cc *grpc.ClientConn) HowieClient {
	return &howieClient{cc}
}

func (c *howieClient) LoL(ctx context.Context, in *HowieUp, opts ...grpc.CallOption) (*HowieDown, error) {
	out := new(HowieDown)
	err := c.cc.Invoke(ctx, "/proto.Howie/LoL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HowieServer is the server API for Howie service.
type HowieServer interface {
	LoL(context.Context, *HowieUp) (*HowieDown, error)
}

func RegisterHowieServer(s *grpc.Server, srv HowieServer) {
	s.RegisterService(&_Howie_serviceDesc, srv)
}

func _Howie_LoL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HowieUp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HowieServer).LoL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Howie/LoL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HowieServer).LoL(ctx, req.(*HowieUp))
	}
	return interceptor(ctx, in, info, handler)
}

var _Howie_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Howie",
	HandlerType: (*HowieServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoL",
			Handler:    _Howie_LoL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "howie.proto",
}

func init() { proto.RegisterFile("howie.proto", fileDescriptor_howie_d5a836b4e8fc0c77) }

var fileDescriptor_howie_d5a836b4e8fc0c77 = []byte{
	// 120 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xc8, 0x2f, 0xcf,
	0x4c, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0xb2, 0x5c, 0xec, 0x1e,
	0x20, 0xd1, 0xd0, 0x02, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0xce, 0x20, 0x30, 0x5b, 0x49, 0x96, 0x8b, 0x13, 0x2c, 0xed, 0x92, 0x5f, 0x9e, 0x27, 0x24,
	0xc0, 0xc5, 0x9c, 0x5b, 0x9c, 0x0e, 0x95, 0x07, 0x31, 0x8d, 0x8c, 0xb8, 0x58, 0xc1, 0xd2, 0x42,
	0x9a, 0x5c, 0xcc, 0x3e, 0xf9, 0x3e, 0x42, 0x7c, 0x10, 0xc3, 0xf5, 0xa0, 0x46, 0x4a, 0x09, 0x20,
	0xf3, 0x41, 0x66, 0x28, 0x31, 0x24, 0xb1, 0x81, 0x85, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff,
	0xfe, 0xa6, 0xc5, 0x65, 0x8e, 0x00, 0x00, 0x00,
}
